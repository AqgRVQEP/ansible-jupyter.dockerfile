#!/usr/bin/env ansible-playbook
---

- hosts: localhost

  vars:
    # Same package on GNU/Linux.
    same_packages:
      - bash
      - bash-completion
      - ca-certificates
      - curl
      - git
      - openssl

    # Alpine Linux.
    apk_packages:
      - openssh-client
      - vim

    # Debian, Ubuntu.
    apt_packages: "{{ apk_packages }}"

    # Arch Linux.
    pacman_packages:
      - openssh
      - vim

    # Gentoo Linux.
    portage_packages:
      - bash
      - bash-completion
      - ca-certificates
      - dev-vcs/git
      - net-misc/curl
      - openssh
      - openssl
      - sqlite
      - vim

    # CentOS.
    yum_packages:
      - openssh-clients
      - vim-minimal

    # openSUSE
    zypper_packages: "{{ pacman_packages }}"

    # Python.
    pip_packages:
      - docker-py
      - docker-compose

    jupyter_notebook_config_py_url: "https://raw.githubusercontent.com/chusiang/ansible-jupyter.dockerfile/master/files/jupyter_notebook_config.py"
    ssh_private_key_url: "https://raw.githubusercontent.com/chusiang/ansible-jupyter.dockerfile/master/files/ssh/id_rsa"
    ansible_cfg_url: "https://raw.githubusercontent.com/chusiang/ansible-jupyter.dockerfile/master/ansible.cfg"
    inventory_url: "https://raw.githubusercontent.com/chusiang/ansible-jupyter.dockerfile/master/inventory"

  tasks:
    # General Linux.
    - name: install same packages
      package: name={{ item }} state=present
      with_items: "{{ same_packages }}"
      when:
        - same_packages is defined
        - ansible_pkg_mgr != "portage"

    # Alpine Linux.
    - name: install apk packages
      apk: name={{ item }} state=present
      with_items: "{{ apk_packages }}"
      when:
        - apk_packages is defined
        - ansible_pkg_mgr == "apk"

    # Debian, Ubuntu.
    - name: install apt packages
      apt: name={{ item }} state=present
      with_items: "{{ apt_packages }}"
      when:
        - apt_packages is defined
        - ansible_pkg_mgr == "apt"

    # Arch Linux.
    - name: install pacman packages
      pacman: name={{ item }} state=present
      with_items: "{{ pacman_packages }}"
      when:
        - pacman_packages is defined
        - ansible_pkg_mgr == "pacman"

    # Gentoo Linux.
    - name: install portage packages
      portage: package={{ item }} state=present
      with_items:
       - "{{ portage_packages }}"
      when:
        - portage_packages is defined
        - ansible_pkg_mgr == "portage"

    # CentOS.
    - name: install yum packages
      yum: name={{ item }} state=present
      with_items: "{{ yum_packages }}"
      when:
        - yum_packages is defined
        - ansible_pkg_mgr == "yum"

    # openSUSE
    - name: install zypper packages
      zypper: name={{ item }} state=present
      with_items: "{{ zypper_packages }}"
      when:
        - zypper_packages is defined
        - ansible_pkg_mgr == "zypper"

    # General Python packages.
    - name: install some pip packages
      pip: name={{ item }} state=present
      with_items: "{{ pip_packages }}"
      when: pip_packages is defined

    # Only install pysqlite
    - name: install the pysqlite for gentoo
      pip: name=pysqlite state=present
      when:
        - ansible_pkg_mgr == "portage"

    # Only install Jupyter.
    - name: install the jupyter notebook
      pip: name=jupyter version=1.0.0 state=present

    # Disable Jupyter authentication of token.
    - name: create `/root/.jupyter` directory
      file: path=/root/.jupyter state=directory mode=0700

    - name: get the jupyter_notebook_config.py
      get_url: >
        url={{ jupyter_notebook_config_py_url }} dest=/root/.jupyter/jupyter_notebook_config.py mode=0644
        checksum=md5:c663914a24281ddf10df6bc9e7238b07

    # Create `ssh_config` directory.
    - name: create `/root/.ssh` directory
      file: path=/root/.ssh state=directory mode=0700

    # Get the ssh private key.
    - name: get the ssh private key
      get_url: >
        url={{ ssh_private_key_url }} dest=/root/.ssh/id_rsa mode=0600
        checksum=md5:6cc26e77bf23a9d72a51b22387bea61f

    # Get the ansible.cfg.
    - name: get the ansible.cfg file
      get_url: url={{ ansible_cfg_url }} dest=/home/ mode=0644

    # Get the inventory file.
    - name: get the inventory file
      get_url: url={{ inventory_url }} dest=/home/ mode=0644

# vim:ft=ansible :
